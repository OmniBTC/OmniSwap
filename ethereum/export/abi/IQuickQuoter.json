{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "path",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "quoteExactInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint16[]",
          "name": "fees",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint160",
          "name": "limitSqrtPrice",
          "type": "uint160"
        }
      ],
      "name": "quoteExactInputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "fee",
          "type": "uint16"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "path",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "quoteExactOutput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint16[]",
          "name": "fees",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint160",
          "name": "limitSqrtPrice",
          "type": "uint160"
        }
      ],
      "name": "quoteExactOutputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "fee",
          "type": "uint16"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "43": "contracts/Interfaces/IQuickQuoter.sol"
  },
  "ast": {
    "absolutePath": "contracts/Interfaces/IQuickQuoter.sol",
    "exportedSymbols": {
      "IQuickQuoter": [
        11840
      ]
    },
    "id": 11841,
    "license": "GPL-2.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11779,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:43"
      },
      {
        "id": 11780,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "70:19:43"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IQuickQuoter",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 11781,
          "nodeType": "StructuredDocumentation",
          "src": "91:423:43",
          "text": "@title Quoter Interface\n @notice Supports quoting the calculated amounts from exact input or exact output swaps\n @dev These functions are not marked view because they rely on calling non-view functions and reverting\n to compute the result. They are also not gas efficient and should not be called on-chain.\n Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-periphery"
        },
        "fullyImplemented": false,
        "id": 11840,
        "linearizedBaseContracts": [
          11840
        ],
        "name": "IQuickQuoter",
        "nameLocation": "524:12:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 11782,
              "nodeType": "StructuredDocumentation",
              "src": "543:302:43",
              "text": "@notice Returns the amount out received for a given exact input swap without executing the swap\n @param path The path of the swap, i.e. each token pair\n @param amountIn The amount of the first token to swap\n @return amountOut The amount of the last token that would be received"
            },
            "functionSelector": "cdca1753",
            "id": 11794,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteExactInput",
            "nameLocation": "859:15:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11784,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "888:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11794,
                  "src": "875:17:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11783,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11786,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "902:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11794,
                  "src": "894:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "874:37:43"
            },
            "returnParameters": {
              "id": 11793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11789,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "954:9:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11794,
                  "src": "946:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11792,
                  "mutability": "mutable",
                  "name": "fees",
                  "nameLocation": "981:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11794,
                  "src": "965:20:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11790,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "965:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 11791,
                    "nodeType": "ArrayTypeName",
                    "src": "965:8:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "945:41:43"
            },
            "scope": 11840,
            "src": "850:137:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11795,
              "nodeType": "StructuredDocumentation",
              "src": "993:418:43",
              "text": "@notice Returns the amount out received for a given exact input but for a swap of a single pool\n @param tokenIn The token being swapped in\n @param tokenOut The token being swapped out\n @param amountIn The desired input amount\n @param limitSqrtPrice The price limit of the pool that cannot be exceeded by the swap\n @return amountOut The amount of `tokenOut` that would be received"
            },
            "functionSelector": "2d9ebd1d",
            "id": 11810,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteExactInputSingle",
            "nameLocation": "1425:21:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11797,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "1464:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11810,
                  "src": "1456:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11799,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "1489:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11810,
                  "src": "1481:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11801,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "1515:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11810,
                  "src": "1507:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11803,
                  "mutability": "mutable",
                  "name": "limitSqrtPrice",
                  "nameLocation": "1541:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11810,
                  "src": "1533:22:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 11802,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1446:115:43"
            },
            "returnParameters": {
              "id": 11809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11806,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "1588:9:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11810,
                  "src": "1580:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11808,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1606:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11810,
                  "src": "1599:10:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 11807,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1579:31:43"
            },
            "scope": 11840,
            "src": "1416:195:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11811,
              "nodeType": "StructuredDocumentation",
              "src": "1617:338:43",
              "text": "@notice Returns the amount in required for a given exact output swap without executing the swap\n @param path The path of the swap, i.e. each token pair. Path must be provided in reverse order\n @param amountOut The amount of the last token to receive\n @return amountIn The amount of first token required to be paid"
            },
            "functionSelector": "2f80bb1d",
            "id": 11823,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteExactOutput",
            "nameLocation": "1969:16:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11813,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "1999:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11823,
                  "src": "1986:17:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11812,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11815,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "2013:9:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11823,
                  "src": "2005:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2005:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:38:43"
            },
            "returnParameters": {
              "id": 11822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11818,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "2066:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11823,
                  "src": "2058:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11821,
                  "mutability": "mutable",
                  "name": "fees",
                  "nameLocation": "2092:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11823,
                  "src": "2076:20:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11819,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "2076:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 11820,
                    "nodeType": "ArrayTypeName",
                    "src": "2076:8:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2057:40:43"
            },
            "scope": 11840,
            "src": "1960:138:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11824,
              "nodeType": "StructuredDocumentation",
              "src": "2104:465:43",
              "text": "@notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n @param tokenIn The token being swapped in\n @param tokenOut The token being swapped out\n @param amountOut The desired output amount\n @param limitSqrtPrice The price limit of the pool that cannot be exceeded by the swap\n @return amountIn The amount required as the input for the swap in order to receive `amountOut`"
            },
            "functionSelector": "9e73c81d",
            "id": 11839,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteExactOutputSingle",
            "nameLocation": "2583:22:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11826,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "2623:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11839,
                  "src": "2615:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2615:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11828,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "2648:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11839,
                  "src": "2640:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2640:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11830,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "2674:9:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11839,
                  "src": "2666:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2666:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11832,
                  "mutability": "mutable",
                  "name": "limitSqrtPrice",
                  "nameLocation": "2701:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11839,
                  "src": "2693:22:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 11831,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "2693:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2605:116:43"
            },
            "returnParameters": {
              "id": 11838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11835,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "2748:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11839,
                  "src": "2740:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2740:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11837,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "2765:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 11839,
                  "src": "2758:10:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 11836,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2739:30:43"
            },
            "scope": 11840,
            "src": "2574:196:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11841,
        "src": "514:2258:43",
        "usedErrors": []
      }
    ],
    "src": "45:2728:43"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "IQuickQuoter",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "details": "These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain. Credit to Uniswap Labs under GPL-2.0-or-later license: https://github.com/Uniswap/v3-periphery",
    "kind": "dev",
    "methods": {
      "quoteExactInput(bytes,uint256)": {
        "notice": "Returns the amount out received for a given exact input swap without executing the swap",
        "params": {
          "amountIn": "The amount of the first token to swap",
          "path": "The path of the swap, i.e. each token pair"
        },
        "returns": {
          "amountOut": "The amount of the last token that would be received"
        }
      },
      "quoteExactInputSingle(address,address,uint256,uint160)": {
        "notice": "Returns the amount out received for a given exact input but for a swap of a single pool",
        "params": {
          "amountIn": "The desired input amount",
          "limitSqrtPrice": "The price limit of the pool that cannot be exceeded by the swap",
          "tokenIn": "The token being swapped in",
          "tokenOut": "The token being swapped out"
        },
        "returns": {
          "amountOut": "The amount of `tokenOut` that would be received"
        }
      },
      "quoteExactOutput(bytes,uint256)": {
        "notice": "Returns the amount in required for a given exact output swap without executing the swap",
        "params": {
          "amountOut": "The amount of the last token to receive",
          "path": "The path of the swap, i.e. each token pair. Path must be provided in reverse order"
        },
        "returns": {
          "amountIn": "The amount of first token required to be paid"
        }
      },
      "quoteExactOutputSingle(address,address,uint256,uint160)": {
        "notice": "Returns the amount in required to receive the given exact output amount but for a swap of a single pool",
        "params": {
          "amountOut": "The desired output amount",
          "limitSqrtPrice": "The price limit of the pool that cannot be exceeded by the swap",
          "tokenIn": "The token being swapped in",
          "tokenOut": "The token being swapped out"
        },
        "returns": {
          "amountIn": "The amount required as the input for the swap in order to receive `amountOut`"
        }
      }
    },
    "notice": "Supports quoting the calculated amounts from exact input or exact output swaps",
    "title": "Quoter Interface",
    "version": 1
  },
  "offset": [
    514,
    2772
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "d1cc757da325955be36844bdb4073613dda18126",
  "source": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Quoter Interface\n/// @notice Supports quoting the calculated amounts from exact input or exact output swaps\n/// @dev These functions are not marked view because they rely on calling non-view functions and reverting\n/// to compute the result. They are also not gas efficient and should not be called on-chain.\n/// Credit to Uniswap Labs under GPL-2.0-or-later license:\n/// https://github.com/Uniswap/v3-periphery\ninterface IQuickQuoter {\n    /// @notice Returns the amount out received for a given exact input swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair\n    /// @param amountIn The amount of the first token to swap\n    /// @return amountOut The amount of the last token that would be received\n    function quoteExactInput(bytes memory path, uint256 amountIn)\n        external\n        returns (uint256 amountOut, uint16[] memory fees);\n\n    /// @notice Returns the amount out received for a given exact input but for a swap of a single pool\n    /// @param tokenIn The token being swapped in\n    /// @param tokenOut The token being swapped out\n    /// @param amountIn The desired input amount\n    /// @param limitSqrtPrice The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountOut The amount of `tokenOut` that would be received\n    function quoteExactInputSingle(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint160 limitSqrtPrice\n    ) external returns (uint256 amountOut, uint16 fee);\n\n    /// @notice Returns the amount in required for a given exact output swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair. Path must be provided in reverse order\n    /// @param amountOut The amount of the last token to receive\n    /// @return amountIn The amount of first token required to be paid\n    function quoteExactOutput(bytes memory path, uint256 amountOut)\n        external\n        returns (uint256 amountIn, uint16[] memory fees);\n\n    /// @notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n    /// @param tokenIn The token being swapped in\n    /// @param tokenOut The token being swapped out\n    /// @param amountOut The desired output amount\n    /// @param limitSqrtPrice The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountIn The amount required as the input for the swap in order to receive `amountOut`\n    function quoteExactOutputSingle(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountOut,\n        uint160 limitSqrtPrice\n    ) external returns (uint256 amountIn, uint16 fee);\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/Interfaces/IQuickQuoter.sol",
  "type": "interface"
}