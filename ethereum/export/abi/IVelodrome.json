{
  "abi": [
    {
      "inputs": [],
      "name": "ConversionFromV2ToV1VeloProhibited",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ETHTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Expired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountA",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountADesired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountAOptimal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountB",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountBDesired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientLiquidity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientOutputAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAmountInForETHDeposit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPath",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRouteA",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRouteB",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTokenInForETHDeposit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyWETH",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolFactoryDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SameAddresses",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "UNSAFE_swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountInA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInB",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routesA",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routesB",
          "type": "tuple[]"
        }
      ],
      "name": "generateZapInParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMinA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMinB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routesA",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routesB",
          "type": "tuple[]"
        }
      ],
      "name": "generateZapOutParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMinA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMinB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routes",
          "type": "tuple[]"
        }
      ],
      "name": "getAmountsOut",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "getReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reserveA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "pairFor",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "poolFor",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBDesired",
          "type": "uint256"
        }
      ],
      "name": "quoteAddLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "name": "quoteRemoveLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "quoteStableLiquidityRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "sortTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactETHForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForETH",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountInA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInB",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinB",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountAMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountBMin",
              "type": "uint256"
            }
          ],
          "internalType": "struct IVelodrome.Zap",
          "name": "zapInPool",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routesA",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routesB",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stake",
          "type": "bool"
        }
      ],
      "name": "zapIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinB",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountAMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountBMin",
              "type": "uint256"
            }
          ],
          "internalType": "struct IVelodrome.Zap",
          "name": "zapOutPool",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routesA",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IVelodrome.Route[]",
          "name": "routesB",
          "type": "tuple[]"
        }
      ],
      "name": "zapOut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "59": "contracts/Interfaces/IVelodrome.sol"
  },
  "ast": {
    "absolutePath": "contracts/Interfaces/IVelodrome.sol",
    "exportedSymbols": {
      "IVelodrome": [
        13808
      ]
    },
    "id": 13809,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13273,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:59"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IVelodrome",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 13808,
        "linearizedBaseContracts": [
          13808
        ],
        "name": "IVelodrome",
        "nameLocation": "67:10:59",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IVelodrome.Route",
            "id": 13282,
            "members": [
              {
                "constant": false,
                "id": 13275,
                "mutability": "mutable",
                "name": "from",
                "nameLocation": "115:4:59",
                "nodeType": "VariableDeclaration",
                "scope": 13282,
                "src": "107:12:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13274,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "107:7:59",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13277,
                "mutability": "mutable",
                "name": "to",
                "nameLocation": "137:2:59",
                "nodeType": "VariableDeclaration",
                "scope": 13282,
                "src": "129:10:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13276,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "129:7:59",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13279,
                "mutability": "mutable",
                "name": "stable",
                "nameLocation": "154:6:59",
                "nodeType": "VariableDeclaration",
                "scope": 13282,
                "src": "149:11:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 13278,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "149:4:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13281,
                "mutability": "mutable",
                "name": "factory",
                "nameLocation": "178:7:59",
                "nodeType": "VariableDeclaration",
                "scope": 13282,
                "src": "170:15:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13280,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "170:7:59",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Route",
            "nameLocation": "91:5:59",
            "nodeType": "StructDefinition",
            "scope": 13808,
            "src": "84:108:59",
            "visibility": "public"
          },
          {
            "errorSelector": "9cda8599",
            "id": 13284,
            "name": "ConversionFromV2ToV1VeloProhibited",
            "nameLocation": "204:34:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "238:2:59"
            },
            "src": "198:43:59"
          },
          {
            "errorSelector": "b12d13eb",
            "id": 13286,
            "name": "ETHTransferFailed",
            "nameLocation": "252:17:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "269:2:59"
            },
            "src": "246:26:59"
          },
          {
            "errorSelector": "203d82d8",
            "id": 13288,
            "name": "Expired",
            "nameLocation": "283:7:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:2:59"
            },
            "src": "277:16:59"
          },
          {
            "errorSelector": "5945ea56",
            "id": 13290,
            "name": "InsufficientAmount",
            "nameLocation": "304:18:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "322:2:59"
            },
            "src": "298:27:59"
          },
          {
            "errorSelector": "8f66ec14",
            "id": 13292,
            "name": "InsufficientAmountA",
            "nameLocation": "336:19:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "355:2:59"
            },
            "src": "330:28:59"
          },
          {
            "errorSelector": "34c90624",
            "id": 13294,
            "name": "InsufficientAmountB",
            "nameLocation": "369:19:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "388:2:59"
            },
            "src": "363:28:59"
          },
          {
            "errorSelector": "dc6b2ef2",
            "id": 13296,
            "name": "InsufficientAmountADesired",
            "nameLocation": "402:26:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "428:2:59"
            },
            "src": "396:35:59"
          },
          {
            "errorSelector": "acee0513",
            "id": 13298,
            "name": "InsufficientAmountBDesired",
            "nameLocation": "442:26:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "468:2:59"
            },
            "src": "436:35:59"
          },
          {
            "errorSelector": "fe496df6",
            "id": 13300,
            "name": "InsufficientAmountAOptimal",
            "nameLocation": "482:26:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:2:59"
            },
            "src": "476:35:59"
          },
          {
            "errorSelector": "bb55fd27",
            "id": 13302,
            "name": "InsufficientLiquidity",
            "nameLocation": "522:21:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "543:2:59"
            },
            "src": "516:30:59"
          },
          {
            "errorSelector": "42301c23",
            "id": 13304,
            "name": "InsufficientOutputAmount",
            "nameLocation": "557:24:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:2:59"
            },
            "src": "551:33:59"
          },
          {
            "errorSelector": "70a3fb92",
            "id": 13306,
            "name": "InvalidAmountInForETHDeposit",
            "nameLocation": "595:28:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "623:2:59"
            },
            "src": "589:37:59"
          },
          {
            "errorSelector": "ae6d566f",
            "id": 13308,
            "name": "InvalidTokenInForETHDeposit",
            "nameLocation": "637:27:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:2:59"
            },
            "src": "631:36:59"
          },
          {
            "errorSelector": "20db8267",
            "id": 13310,
            "name": "InvalidPath",
            "nameLocation": "678:11:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:2:59"
            },
            "src": "672:20:59"
          },
          {
            "errorSelector": "4ea0e338",
            "id": 13312,
            "name": "InvalidRouteA",
            "nameLocation": "703:13:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:2:59"
            },
            "src": "697:22:59"
          },
          {
            "errorSelector": "cac9040c",
            "id": 13314,
            "name": "InvalidRouteB",
            "nameLocation": "730:13:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:2:59"
            },
            "src": "724:22:59"
          },
          {
            "errorSelector": "01f180c9",
            "id": 13316,
            "name": "OnlyWETH",
            "nameLocation": "757:8:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "765:2:59"
            },
            "src": "751:17:59"
          },
          {
            "errorSelector": "9c8787c0",
            "id": 13318,
            "name": "PoolDoesNotExist",
            "nameLocation": "779:16:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:2:59"
            },
            "src": "773:25:59"
          },
          {
            "errorSelector": "9a73ab46",
            "id": 13320,
            "name": "PoolFactoryDoesNotExist",
            "nameLocation": "809:23:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:2:59"
            },
            "src": "803:32:59"
          },
          {
            "errorSelector": "ca57cff4",
            "id": 13322,
            "name": "SameAddresses",
            "nameLocation": "846:13:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "859:2:59"
            },
            "src": "840:22:59"
          },
          {
            "errorSelector": "d92e233d",
            "id": 13324,
            "name": "ZeroAddress",
            "nameLocation": "873:11:59",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 13323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "884:2:59"
            },
            "src": "867:20:59"
          },
          {
            "canonicalName": "IVelodrome.Zap",
            "id": 13341,
            "members": [
              {
                "constant": false,
                "id": 13326,
                "mutability": "mutable",
                "name": "tokenA",
                "nameLocation": "1536:6:59",
                "nodeType": "VariableDeclaration",
                "scope": 13341,
                "src": "1528:14:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13325,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1528:7:59",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13328,
                "mutability": "mutable",
                "name": "tokenB",
                "nameLocation": "1560:6:59",
                "nodeType": "VariableDeclaration",
                "scope": 13341,
                "src": "1552:14:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13327,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1552:7:59",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13330,
                "mutability": "mutable",
                "name": "stable",
                "nameLocation": "1581:6:59",
                "nodeType": "VariableDeclaration",
                "scope": 13341,
                "src": "1576:11:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 13329,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1576:4:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13332,
                "mutability": "mutable",
                "name": "factory",
                "nameLocation": "1605:7:59",
                "nodeType": "VariableDeclaration",
                "scope": 13341,
                "src": "1597:15:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13331,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1597:7:59",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13334,
                "mutability": "mutable",
                "name": "amountOutMinA",
                "nameLocation": "1630:13:59",
                "nodeType": "VariableDeclaration",
                "scope": 13341,
                "src": "1622:21:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13333,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1622:7:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13336,
                "mutability": "mutable",
                "name": "amountOutMinB",
                "nameLocation": "1661:13:59",
                "nodeType": "VariableDeclaration",
                "scope": 13341,
                "src": "1653:21:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13335,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1653:7:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13338,
                "mutability": "mutable",
                "name": "amountAMin",
                "nameLocation": "1692:10:59",
                "nodeType": "VariableDeclaration",
                "scope": 13341,
                "src": "1684:18:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13337,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1684:7:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13340,
                "mutability": "mutable",
                "name": "amountBMin",
                "nameLocation": "1720:10:59",
                "nodeType": "VariableDeclaration",
                "scope": 13341,
                "src": "1712:18:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13339,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1712:7:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Zap",
            "nameLocation": "1514:3:59",
            "nodeType": "StructDefinition",
            "scope": 13808,
            "src": "1507:230:59",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 13342,
              "nodeType": "StructuredDocumentation",
              "src": "1743:312:59",
              "text": "@notice Sort two tokens by which address value is less than the other\n @param tokenA   Address of token to sort\n @param tokenB   Address of token to sort\n @return token0  Lower address value between tokenA and tokenB\n @return token1  Higher address value between tokenA and tokenB"
            },
            "functionSelector": "544caa56",
            "id": 13353,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sortTokens",
            "nameLocation": "2069:10:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13344,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "2088:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13353,
                  "src": "2080:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2080:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13346,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "2104:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13353,
                  "src": "2096:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2096:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2079:32:59"
            },
            "returnParameters": {
              "id": 13352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13349,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "2167:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13353,
                  "src": "2159:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2159:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13351,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "2183:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13353,
                  "src": "2175:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2158:32:59"
            },
            "scope": 13808,
            "src": "2060:131:59",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13354,
              "nodeType": "StructuredDocumentation",
              "src": "2197:532:59",
              "text": "@notice Calculate the address of a pool by its' factory.\n         Used by all Router functions containing a `Route[]` or `_factory` argument.\n         Reverts if _factory is not approved by the FactoryRegistry\n @dev Returns a randomly generated address for a nonexistent pool\n @param tokenA   Address of token to query\n @param tokenB   Address of token to query\n @param stable   True if pool is stable, false if volatile\n @param _factory Address of factory which created the pool"
            },
            "functionSelector": "874029d9",
            "id": 13367,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "poolFor",
            "nameLocation": "2743:7:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13356,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "2768:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13367,
                  "src": "2760:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2760:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13358,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "2792:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13367,
                  "src": "2784:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2784:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13360,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "2813:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13367,
                  "src": "2808:11:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13359,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2808:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13362,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "2837:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13367,
                  "src": "2829:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2829:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2750:101:59"
            },
            "returnParameters": {
              "id": 13366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13365,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "2883:4:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13367,
                  "src": "2875:12:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2874:14:59"
            },
            "scope": 13808,
            "src": "2734:155:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13368,
              "nodeType": "StructuredDocumentation",
              "src": "2895:107:59",
              "text": "@notice Wraps around poolFor(tokenA,tokenB,stable,_factory) for backwards compatibility to Velodrome v1"
            },
            "functionSelector": "e4ea9d74",
            "id": 13381,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pairFor",
            "nameLocation": "3016:7:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13370,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "3041:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13381,
                  "src": "3033:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3033:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13372,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "3065:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13381,
                  "src": "3057:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3057:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13374,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "3086:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13381,
                  "src": "3081:11:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13373,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3081:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13376,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "3110:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13381,
                  "src": "3102:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3102:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3023:101:59"
            },
            "returnParameters": {
              "id": 13380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13379,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "3156:4:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13381,
                  "src": "3148:12:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3148:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3147:14:59"
            },
            "scope": 13808,
            "src": "3007:155:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13382,
              "nodeType": "StructuredDocumentation",
              "src": "3168:391:59",
              "text": "@notice Fetch and sort the reserves for a pool\n @param tokenA       .\n @param tokenB       .\n @param stable       True if pool is stable, false if volatile\n @param _factory     Address of PoolFactory for tokenA and tokenB\n @return reserveA    Amount of reserves of the sorted token A\n @return reserveB    Amount of reserves of the sorted token B"
            },
            "functionSelector": "8c0037dc",
            "id": 13397,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getReserves",
            "nameLocation": "3573:11:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13384,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "3602:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13397,
                  "src": "3594:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3594:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13386,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "3626:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13397,
                  "src": "3618:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3618:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13388,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "3647:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13397,
                  "src": "3642:11:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13387,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3642:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13390,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "3671:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13397,
                  "src": "3663:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3663:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3584:101:59"
            },
            "returnParameters": {
              "id": 13396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13393,
                  "mutability": "mutable",
                  "name": "reserveA",
                  "nameLocation": "3717:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13397,
                  "src": "3709:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13395,
                  "mutability": "mutable",
                  "name": "reserveB",
                  "nameLocation": "3735:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13397,
                  "src": "3727:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3727:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3708:36:59"
            },
            "scope": 13808,
            "src": "3564:181:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13398,
              "nodeType": "StructuredDocumentation",
              "src": "3751:76:59",
              "text": "@notice Perform chained getAmountOut calculations on any number of pools"
            },
            "functionSelector": "5509a1ac",
            "id": 13410,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountsOut",
            "nameLocation": "3841:13:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13400,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "3863:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13410,
                  "src": "3855:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3855:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13404,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "3888:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13410,
                  "src": "3873:21:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13402,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13401,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "3873:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "3873:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13403,
                    "nodeType": "ArrayTypeName",
                    "src": "3873:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3854:41:59"
            },
            "returnParameters": {
              "id": 13409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13408,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "3960:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13410,
                  "src": "3943:24:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13406,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3943:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13407,
                    "nodeType": "ArrayTypeName",
                    "src": "3943:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3942:26:59"
            },
            "scope": 13808,
            "src": "3832:137:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13411,
              "nodeType": "StructuredDocumentation",
              "src": "4007:623:59",
              "text": "@notice Quote the amount deposited into a Pool\n @param tokenA           .\n @param tokenB           .\n @param stable           True if pool is stable, false if volatile\n @param _factory         Address of PoolFactory for tokenA and tokenB\n @param amountADesired   Amount of tokenA desired to deposit\n @param amountBDesired   Amount of tokenB desired to deposit\n @return amountA         Amount of tokenA to actually deposit\n @return amountB         Amount of tokenB to actually deposit\n @return liquidity       Amount of liquidity token returned from deposit"
            },
            "functionSelector": "ce700c29",
            "id": 13432,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteAddLiquidity",
            "nameLocation": "4644:17:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13413,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "4679:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13432,
                  "src": "4671:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4671:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13415,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "4703:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13432,
                  "src": "4695:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4695:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13417,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "4724:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13432,
                  "src": "4719:11:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13416,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4719:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13419,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "4748:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13432,
                  "src": "4740:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4740:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13421,
                  "mutability": "mutable",
                  "name": "amountADesired",
                  "nameLocation": "4774:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13432,
                  "src": "4766:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4766:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13423,
                  "mutability": "mutable",
                  "name": "amountBDesired",
                  "nameLocation": "4806:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13432,
                  "src": "4798:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4798:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4661:165:59"
            },
            "returnParameters": {
              "id": 13431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13426,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "4895:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13432,
                  "src": "4887:15:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4887:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13428,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "4924:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13432,
                  "src": "4916:15:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4916:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13430,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "4953:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13432,
                  "src": "4945:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4945:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4873:99:59"
            },
            "scope": 13808,
            "src": "4635:338:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13433,
              "nodeType": "StructuredDocumentation",
              "src": "4979:430:59",
              "text": "@notice Quote the amount of liquidity removed from a Pool\n @param tokenA       .\n @param tokenB       .\n @param stable       True if pool is stable, false if volatile\n @param _factory     Address of PoolFactory for tokenA and tokenB\n @param liquidity    Amount of liquidity to remove\n @return amountA     Amount of tokenA received\n @return amountB     Amount of tokenB received"
            },
            "functionSelector": "c92de3ec",
            "id": 13450,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteRemoveLiquidity",
            "nameLocation": "5423:20:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13435,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "5461:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13450,
                  "src": "5453:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5453:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13437,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "5485:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13450,
                  "src": "5477:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5477:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13439,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "5506:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13450,
                  "src": "5501:11:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13438,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5501:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13441,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "5530:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13450,
                  "src": "5522:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5522:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13443,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "5556:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13450,
                  "src": "5548:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5548:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5443:128:59"
            },
            "returnParameters": {
              "id": 13449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13446,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "5603:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13450,
                  "src": "5595:15:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5595:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13448,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "5620:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13450,
                  "src": "5612:15:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5612:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5594:34:59"
            },
            "scope": 13808,
            "src": "5414:215:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13451,
              "nodeType": "StructuredDocumentation",
              "src": "5635:804:59",
              "text": "@notice Add liquidity of two tokens to a Pool\n @param tokenA           .\n @param tokenB           .\n @param stable           True if pool is stable, false if volatile\n @param amountADesired   Amount of tokenA desired to deposit\n @param amountBDesired   Amount of tokenB desired to deposit\n @param amountAMin       Minimum amount of tokenA to deposit\n @param amountBMin       Minimum amount of tokenB to deposit\n @param to               Recipient of liquidity token\n @param deadline         Deadline to receive liquidity\n @return amountA         Amount of tokenA to actually deposit\n @return amountB         Amount of tokenB to actually deposit\n @return liquidity       Amount of liquidity token returned from deposit"
            },
            "functionSelector": "5a47ddc3",
            "id": 13478,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "6453:12:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13453,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "6483:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13478,
                  "src": "6475:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6475:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13455,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "6507:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13478,
                  "src": "6499:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6499:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13457,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "6528:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13478,
                  "src": "6523:11:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13456,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6523:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13459,
                  "mutability": "mutable",
                  "name": "amountADesired",
                  "nameLocation": "6552:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13478,
                  "src": "6544:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6544:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13461,
                  "mutability": "mutable",
                  "name": "amountBDesired",
                  "nameLocation": "6584:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13478,
                  "src": "6576:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6576:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13463,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "6616:10:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13478,
                  "src": "6608:18:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6608:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13465,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "6644:10:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13478,
                  "src": "6636:18:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6636:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13467,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6672:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13478,
                  "src": "6664:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6664:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13469,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "6692:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13478,
                  "src": "6684:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6684:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6465:241:59"
            },
            "returnParameters": {
              "id": 13477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13472,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "6762:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13478,
                  "src": "6754:15:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6754:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13474,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "6791:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13478,
                  "src": "6783:15:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6783:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13476,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "6820:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13478,
                  "src": "6812:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6812:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6740:99:59"
            },
            "scope": 13808,
            "src": "6444:396:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13479,
              "nodeType": "StructuredDocumentation",
              "src": "6846:761:59",
              "text": "@notice Add liquidity of a token and WETH (transferred as ETH) to a Pool\n @param token                .\n @param stable               True if pool is stable, false if volatile\n @param amountTokenDesired   Amount of token desired to deposit\n @param amountTokenMin       Minimum amount of token to deposit\n @param amountETHMin         Minimum amount of ETH to deposit\n @param to                   Recipient of liquidity token\n @param deadline             Deadline to add liquidity\n @return amountToken         Amount of token to actually deposit\n @return amountETH           Amount of tokenETH to actually deposit\n @return liquidity           Amount of liquidity token returned from deposit"
            },
            "functionSelector": "b7e0d4c0",
            "id": 13502,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidityETH",
            "nameLocation": "7621:15:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13481,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7654:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13502,
                  "src": "7646:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7646:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13483,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "7674:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13502,
                  "src": "7669:11:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13482,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7669:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13485,
                  "mutability": "mutable",
                  "name": "amountTokenDesired",
                  "nameLocation": "7698:18:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13502,
                  "src": "7690:26:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7690:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13487,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "7734:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13502,
                  "src": "7726:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7726:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13489,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "7766:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13502,
                  "src": "7758:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7758:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13491,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7796:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13502,
                  "src": "7788:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7788:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13493,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "7816:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13502,
                  "src": "7808:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7808:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7636:194:59"
            },
            "returnParameters": {
              "id": 13501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13496,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "7902:11:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13502,
                  "src": "7894:19:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13495,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7894:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13498,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "7935:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13502,
                  "src": "7927:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7927:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13500,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "7966:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13502,
                  "src": "7958:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7958:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7880:105:59"
            },
            "scope": 13808,
            "src": "7612:374:59",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13503,
              "nodeType": "StructuredDocumentation",
              "src": "8027:592:59",
              "text": "@notice Remove liquidity of two tokens from a Pool\n @param tokenA       .\n @param tokenB       .\n @param stable       True if pool is stable, false if volatile\n @param liquidity    Amount of liquidity to remove\n @param amountAMin   Minimum amount of tokenA to receive\n @param amountBMin   Minimum amount of tokenB to receive\n @param to           Recipient of tokens received\n @param deadline     Deadline to remove liquidity\n @return amountA     Amount of tokenA received\n @return amountB     Amount of tokenB received"
            },
            "functionSelector": "0dede6c4",
            "id": 13526,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidity",
            "nameLocation": "8633:15:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13505,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "8666:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13526,
                  "src": "8658:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8658:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13507,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "8690:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13526,
                  "src": "8682:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8682:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13509,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "8711:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13526,
                  "src": "8706:11:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13508,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8706:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13511,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "8735:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13526,
                  "src": "8727:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8727:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13513,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "8762:10:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13526,
                  "src": "8754:18:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8754:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13515,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "8790:10:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13526,
                  "src": "8782:18:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8782:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13517,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8818:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13526,
                  "src": "8810:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8810:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13519,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "8838:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13526,
                  "src": "8830:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8830:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8648:204:59"
            },
            "returnParameters": {
              "id": 13525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13522,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "8879:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13526,
                  "src": "8871:15:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8871:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13524,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "8896:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13526,
                  "src": "8888:15:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8888:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8870:34:59"
            },
            "scope": 13808,
            "src": "8624:281:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13527,
              "nodeType": "StructuredDocumentation",
              "src": "8911:615:59",
              "text": "@notice Remove liquidity of a token and WETH (returned as ETH) from a Pool\n @param token            .\n @param stable           True if pool is stable, false if volatile\n @param liquidity        Amount of liquidity to remove\n @param amountTokenMin   Minimum amount of token to receive\n @param amountETHMin     Minimum amount of ETH to receive\n @param to               Recipient of liquidity token\n @param deadline         Deadline to receive liquidity\n @return amountToken     Amount of token received\n @return amountETH       Amount of ETH received"
            },
            "functionSelector": "d7b0e0a5",
            "id": 13548,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidityETH",
            "nameLocation": "9540:18:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13529,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "9576:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13548,
                  "src": "9568:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13528,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9568:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13531,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "9596:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13548,
                  "src": "9591:11:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13530,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9591:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13533,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "9620:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13548,
                  "src": "9612:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9612:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13535,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "9647:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13548,
                  "src": "9639:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9639:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13537,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "9679:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13548,
                  "src": "9671:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9671:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13539,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9709:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13548,
                  "src": "9701:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9701:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13541,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "9729:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13548,
                  "src": "9721:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9721:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9558:185:59"
            },
            "returnParameters": {
              "id": 13547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13544,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "9770:11:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13548,
                  "src": "9762:19:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9762:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13546,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "9791:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13548,
                  "src": "9783:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9783:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9761:40:59"
            },
            "scope": 13808,
            "src": "9531:271:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13549,
              "nodeType": "StructuredDocumentation",
              "src": "9808:574:59",
              "text": "@notice Remove liquidity of a fee-on-transfer token and WETH (returned as ETH) from a Pool\n @param token            .\n @param stable           True if pool is stable, false if volatile\n @param liquidity        Amount of liquidity to remove\n @param amountTokenMin   Minimum amount of token to receive\n @param amountETHMin     Minimum amount of ETH to receive\n @param to               Recipient of liquidity token\n @param deadline         Deadline to receive liquidity\n @return amountETH       Amount of ETH received"
            },
            "functionSelector": "fe411f14",
            "id": 13568,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
            "nameLocation": "10396:47:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13551,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "10461:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13568,
                  "src": "10453:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10453:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13553,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "10481:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13568,
                  "src": "10476:11:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13552,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10476:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13555,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "10505:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13568,
                  "src": "10497:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10497:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13557,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "10532:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13568,
                  "src": "10524:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10524:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13559,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "10564:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13568,
                  "src": "10556:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10556:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13561,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10594:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13568,
                  "src": "10586:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10586:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13563,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "10614:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13568,
                  "src": "10606:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10606:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10443:185:59"
            },
            "returnParameters": {
              "id": 13567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13566,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "10655:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13568,
                  "src": "10647:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10647:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10646:19:59"
            },
            "scope": 13808,
            "src": "10387:279:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13569,
              "nodeType": "StructuredDocumentation",
              "src": "10695:401:59",
              "text": "@notice Swap one token for another\n @param amountIn     Amount of token in\n @param amountOutMin Minimum amount of desired token received\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens\n @return amounts     Array of amounts returned per route"
            },
            "functionSelector": "cac88ea9",
            "id": 13587,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForTokens",
            "nameLocation": "11110:24:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13571,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "11152:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13587,
                  "src": "11144:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11144:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13573,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "11178:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13587,
                  "src": "11170:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11170:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13577,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "11217:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13587,
                  "src": "11200:23:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13575,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13574,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "11200:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "11200:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13576,
                    "nodeType": "ArrayTypeName",
                    "src": "11200:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13579,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11241:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13587,
                  "src": "11233:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11233:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13581,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "11261:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13587,
                  "src": "11253:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11253:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11134:141:59"
            },
            "returnParameters": {
              "id": 13586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13585,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11311:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13587,
                  "src": "11294:24:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13583,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11294:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13584,
                    "nodeType": "ArrayTypeName",
                    "src": "11294:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11293:26:59"
            },
            "scope": 13808,
            "src": "11101:219:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13588,
              "nodeType": "StructuredDocumentation",
              "src": "11326:348:59",
              "text": "@notice Swap ETH for a token\n @param amountOutMin Minimum amount of desired token received\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens\n @return amounts     Array of amounts returned per route"
            },
            "functionSelector": "903638a4",
            "id": 13604,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactETHForTokens",
            "nameLocation": "11688:21:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13590,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "11727:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13604,
                  "src": "11719:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13589,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11719:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13594,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "11766:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13604,
                  "src": "11749:23:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13592,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13591,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "11749:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "11749:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13593,
                    "nodeType": "ArrayTypeName",
                    "src": "11749:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13596,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11790:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13604,
                  "src": "11782:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11782:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13598,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "11810:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13604,
                  "src": "11802:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13597,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11802:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11709:115:59"
            },
            "returnParameters": {
              "id": 13603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13602,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11868:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13604,
                  "src": "11851:24:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13600,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11851:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13601,
                    "nodeType": "ArrayTypeName",
                    "src": "11851:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11850:26:59"
            },
            "scope": 13808,
            "src": "11679:198:59",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13605,
              "nodeType": "StructuredDocumentation",
              "src": "11883:403:59",
              "text": "@notice Swap a token for WETH (returned as ETH)\n @param amountIn     Amount of token in\n @param amountOutMin Minimum amount of desired ETH\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens\n @return amounts     Array of amounts returned per route"
            },
            "functionSelector": "c6b7f1b6",
            "id": 13623,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForETH",
            "nameLocation": "12300:21:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13607,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "12339:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13623,
                  "src": "12331:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12331:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13609,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "12365:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13623,
                  "src": "12357:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12357:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13613,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "12404:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13623,
                  "src": "12387:23:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13611,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13610,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "12387:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "12387:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13612,
                    "nodeType": "ArrayTypeName",
                    "src": "12387:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13615,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12428:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13623,
                  "src": "12420:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12420:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13617,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "12448:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13623,
                  "src": "12440:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12440:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12321:141:59"
            },
            "returnParameters": {
              "id": 13622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13621,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "12498:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13623,
                  "src": "12481:24:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13619,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12481:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13620,
                    "nodeType": "ArrayTypeName",
                    "src": "12481:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12480:26:59"
            },
            "scope": 13808,
            "src": "12291:216:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13624,
              "nodeType": "StructuredDocumentation",
              "src": "12513:313:59",
              "text": "@notice Swap one token for another without slippage protection\n @return amounts     Array of amounts to swap  per route\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens"
            },
            "functionSelector": "4111d597",
            "id": 13641,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "UNSAFE_swapExactTokensForTokens",
            "nameLocation": "12840:31:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13627,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "12898:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13641,
                  "src": "12881:24:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13625,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12881:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13626,
                    "nodeType": "ArrayTypeName",
                    "src": "12881:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13631,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "12932:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13641,
                  "src": "12915:23:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13629,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13628,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "12915:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "12915:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13630,
                    "nodeType": "ArrayTypeName",
                    "src": "12915:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13633,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12956:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13641,
                  "src": "12948:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12948:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13635,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "12976:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13641,
                  "src": "12968:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12968:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12871:119:59"
            },
            "returnParameters": {
              "id": 13640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13639,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13641,
                  "src": "13009:16:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13637,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13009:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13638,
                    "nodeType": "ArrayTypeName",
                    "src": "13009:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13008:18:59"
            },
            "scope": 13808,
            "src": "12831:196:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13642,
              "nodeType": "StructuredDocumentation",
              "src": "13092:371:59",
              "text": "@notice Swap one token for another supporting fee-on-transfer tokens\n @param amountIn     Amount of token in\n @param amountOutMin Minimum amount of desired token received\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens"
            },
            "functionSelector": "88cd821e",
            "id": 13657,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            "nameLocation": "13477:53:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13644,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "13548:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13657,
                  "src": "13540:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13540:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13646,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "13574:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13657,
                  "src": "13566:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13566:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13650,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "13613:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13657,
                  "src": "13596:23:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13648,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13647,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "13596:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "13596:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13649,
                    "nodeType": "ArrayTypeName",
                    "src": "13596:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13652,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13637:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13657,
                  "src": "13629:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13629:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13654,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "13657:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13657,
                  "src": "13649:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13649:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13530:141:59"
            },
            "returnParameters": {
              "id": 13656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13680:0:59"
            },
            "scope": 13808,
            "src": "13468:213:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13658,
              "nodeType": "StructuredDocumentation",
              "src": "13687:318:59",
              "text": "@notice Swap ETH for a token supporting fee-on-transfer tokens\n @param amountOutMin Minimum amount of desired token received\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens"
            },
            "functionSelector": "3da5acba",
            "id": 13671,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
            "nameLocation": "14019:50:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13660,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "14087:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13671,
                  "src": "14079:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14079:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13664,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "14126:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13671,
                  "src": "14109:23:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13662,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13661,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "14109:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "14109:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13663,
                    "nodeType": "ArrayTypeName",
                    "src": "14109:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13666,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14150:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13671,
                  "src": "14142:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14142:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13668,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "14170:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13671,
                  "src": "14162:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14162:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14069:115:59"
            },
            "returnParameters": {
              "id": 13670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14201:0:59"
            },
            "scope": 13808,
            "src": "14010:192:59",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13672,
              "nodeType": "StructuredDocumentation",
              "src": "14208:373:59",
              "text": "@notice Swap a token for WETH (returned as ETH) supporting fee-on-transfer tokens\n @param amountIn     Amount of token in\n @param amountOutMin Minimum amount of desired ETH\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens"
            },
            "functionSelector": "12bc3aca",
            "id": 13687,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
            "nameLocation": "14595:50:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13674,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "14663:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13687,
                  "src": "14655:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14655:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13676,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "14689:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13687,
                  "src": "14681:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14681:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13680,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "14728:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13687,
                  "src": "14711:23:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13678,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13677,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "14711:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "14711:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13679,
                    "nodeType": "ArrayTypeName",
                    "src": "14711:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13682,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14752:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13687,
                  "src": "14744:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14744:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13684,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "14772:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13687,
                  "src": "14764:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14764:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14645:141:59"
            },
            "returnParameters": {
              "id": 13686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14795:0:59"
            },
            "scope": 13808,
            "src": "14586:210:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13688,
              "nodeType": "StructuredDocumentation",
              "src": "14802:1029:59",
              "text": "@notice Zap a token A into a pool (B, C). (A can be equal to B or C).\n         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).\n         Slippage is required for the initial swap.\n         Additional slippage may be required when adding liquidity as the\n         price of the token may have changed.\n @param tokenIn      Token you are zapping in from (i.e. input token).\n @param amountInA    Amount of input token you wish to send down routesA\n @param amountInB    Amount of input token you wish to send down routesB\n @param zapInPool    Contains zap struct information. See Zap struct.\n @param routesA      Route used to convert input token to tokenA\n @param routesB      Route used to convert input token to tokenB\n @param to           Address you wish to mint liquidity to.\n @param stake        Auto-stake liquidity in corresponding gauge.\n @return liquidity   Amount of LP tokens created from zapping in."
            },
            "functionSelector": "fb49bafd",
            "id": 13714,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "zapIn",
            "nameLocation": "15845:5:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13690,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "15868:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13714,
                  "src": "15860:15:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15860:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13692,
                  "mutability": "mutable",
                  "name": "amountInA",
                  "nameLocation": "15893:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13714,
                  "src": "15885:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15885:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13694,
                  "mutability": "mutable",
                  "name": "amountInB",
                  "nameLocation": "15920:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13714,
                  "src": "15912:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15912:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13697,
                  "mutability": "mutable",
                  "name": "zapInPool",
                  "nameLocation": "15952:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13714,
                  "src": "15939:22:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Zap_$13341_calldata_ptr",
                    "typeString": "struct IVelodrome.Zap"
                  },
                  "typeName": {
                    "id": 13696,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13695,
                      "name": "Zap",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13341,
                      "src": "15939:3:59"
                    },
                    "referencedDeclaration": 13341,
                    "src": "15939:3:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zap_$13341_storage_ptr",
                      "typeString": "struct IVelodrome.Zap"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13701,
                  "mutability": "mutable",
                  "name": "routesA",
                  "nameLocation": "15988:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13714,
                  "src": "15971:24:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13699,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13698,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "15971:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "15971:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13700,
                    "nodeType": "ArrayTypeName",
                    "src": "15971:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13705,
                  "mutability": "mutable",
                  "name": "routesB",
                  "nameLocation": "16022:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13714,
                  "src": "16005:24:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13703,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13702,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "16005:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "16005:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13704,
                    "nodeType": "ArrayTypeName",
                    "src": "16005:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13707,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16047:2:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13714,
                  "src": "16039:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16039:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13709,
                  "mutability": "mutable",
                  "name": "stake",
                  "nameLocation": "16064:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13714,
                  "src": "16059:10:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13708,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16059:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15850:225:59"
            },
            "returnParameters": {
              "id": 13713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13712,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "16110:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13714,
                  "src": "16102:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16102:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16101:19:59"
            },
            "scope": 13808,
            "src": "15836:285:59",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13715,
              "nodeType": "StructuredDocumentation",
              "src": "16127:698:59",
              "text": "@notice Zap out a pool (B, C) into A.\n         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).\n         Slippage is required for the removal of liquidity.\n         Additional slippage may be required on the swap as the\n         price of the token may have changed.\n @param tokenOut     Token you are zapping out to (i.e. output token).\n @param liquidity    Amount of liquidity you wish to remove.\n @param zapOutPool   Contains zap struct information. See Zap struct.\n @param routesA      Route used to convert tokenA into output token.\n @param routesB      Route used to convert tokenB into output token."
            },
            "functionSelector": "a81b9159",
            "id": 13733,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "zapOut",
            "nameLocation": "16839:6:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13717,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "16863:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13733,
                  "src": "16855:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16855:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13719,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "16889:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13733,
                  "src": "16881:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16881:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13722,
                  "mutability": "mutable",
                  "name": "zapOutPool",
                  "nameLocation": "16921:10:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13733,
                  "src": "16908:23:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Zap_$13341_calldata_ptr",
                    "typeString": "struct IVelodrome.Zap"
                  },
                  "typeName": {
                    "id": 13721,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13720,
                      "name": "Zap",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13341,
                      "src": "16908:3:59"
                    },
                    "referencedDeclaration": 13341,
                    "src": "16908:3:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zap_$13341_storage_ptr",
                      "typeString": "struct IVelodrome.Zap"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13726,
                  "mutability": "mutable",
                  "name": "routesA",
                  "nameLocation": "16958:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13733,
                  "src": "16941:24:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13724,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13723,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "16941:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "16941:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13725,
                    "nodeType": "ArrayTypeName",
                    "src": "16941:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13730,
                  "mutability": "mutable",
                  "name": "routesB",
                  "nameLocation": "16992:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13733,
                  "src": "16975:24:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13728,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13727,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "16975:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "16975:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13729,
                    "nodeType": "ArrayTypeName",
                    "src": "16975:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16845:160:59"
            },
            "returnParameters": {
              "id": 13732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17014:0:59"
            },
            "scope": 13808,
            "src": "16830:185:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13734,
              "nodeType": "StructuredDocumentation",
              "src": "17021:1115:59",
              "text": "@notice Used to generate params required for zapping in.\n         Zap in => remove liquidity then swap.\n         Apply slippage to expected swap values to account for changes in reserves in between.\n @dev Output token refers to the token you want to zap in from.\n @param tokenA           .\n @param tokenB           .\n @param stable           .\n @param _factory         .\n @param amountInA        Amount of input token you wish to send down routesA\n @param amountInB        Amount of input token you wish to send down routesB\n @param routesA          Route used to convert input token to tokenA\n @param routesB          Route used to convert input token to tokenB\n @return amountOutMinA   Minimum output expected from swapping input token to tokenA.\n @return amountOutMinB   Minimum output expected from swapping input token to tokenB.\n @return amountAMin      Minimum amount of tokenA expected from depositing liquidity.\n @return amountBMin      Minimum amount of tokenB expected from depositing liquidity."
            },
            "functionSelector": "07db50fa",
            "id": 13765,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "generateZapInParams",
            "nameLocation": "18150:19:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13736,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "18187:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13765,
                  "src": "18179:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18179:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13738,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "18211:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13765,
                  "src": "18203:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18203:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13740,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "18232:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13765,
                  "src": "18227:11:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13739,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18227:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13742,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "18256:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13765,
                  "src": "18248:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18248:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13744,
                  "mutability": "mutable",
                  "name": "amountInA",
                  "nameLocation": "18282:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13765,
                  "src": "18274:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18274:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13746,
                  "mutability": "mutable",
                  "name": "amountInB",
                  "nameLocation": "18309:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13765,
                  "src": "18301:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18301:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13750,
                  "mutability": "mutable",
                  "name": "routesA",
                  "nameLocation": "18345:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13765,
                  "src": "18328:24:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13748,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13747,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "18328:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "18328:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13749,
                    "nodeType": "ArrayTypeName",
                    "src": "18328:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13754,
                  "mutability": "mutable",
                  "name": "routesB",
                  "nameLocation": "18379:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13765,
                  "src": "18362:24:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13752,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13751,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "18362:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "18362:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13753,
                    "nodeType": "ArrayTypeName",
                    "src": "18362:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18169:223:59"
            },
            "returnParameters": {
              "id": 13764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13757,
                  "mutability": "mutable",
                  "name": "amountOutMinA",
                  "nameLocation": "18461:13:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13765,
                  "src": "18453:21:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18453:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13759,
                  "mutability": "mutable",
                  "name": "amountOutMinB",
                  "nameLocation": "18496:13:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13765,
                  "src": "18488:21:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18488:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13761,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "18531:10:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13765,
                  "src": "18523:18:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18523:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13763,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "18563:10:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13765,
                  "src": "18555:18:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18555:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18439:144:59"
            },
            "scope": 13808,
            "src": "18141:443:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13766,
              "nodeType": "StructuredDocumentation",
              "src": "18590:1065:59",
              "text": "@notice Used to generate params required for zapping out.\n         Zap out => swap then add liquidity.\n         Apply slippage to expected liquidity values to account for changes in reserves in between.\n @dev Output token refers to the token you want to zap out of.\n @param tokenA           .\n @param tokenB           .\n @param stable           .\n @param _factory         .\n @param liquidity        Amount of liquidity being zapped out of into a given output token.\n @param routesA          Route used to convert tokenA into output token.\n @param routesB          Route used to convert tokenB into output token.\n @return amountOutMinA   Minimum output expected from swapping tokenA into output token.\n @return amountOutMinB   Minimum output expected from swapping tokenB into output token.\n @return amountAMin      Minimum amount of tokenA expected from withdrawing liquidity.\n @return amountBMin      Minimum amount of tokenB expected from withdrawing liquidity."
            },
            "functionSelector": "7539d413",
            "id": 13795,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "generateZapOutParams",
            "nameLocation": "19669:20:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13768,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "19707:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13795,
                  "src": "19699:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19699:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13770,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "19731:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13795,
                  "src": "19723:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19723:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13772,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "19752:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13795,
                  "src": "19747:11:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13771,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19747:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13774,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "19776:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13795,
                  "src": "19768:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19768:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13776,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "19802:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13795,
                  "src": "19794:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19794:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13780,
                  "mutability": "mutable",
                  "name": "routesA",
                  "nameLocation": "19838:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13795,
                  "src": "19821:24:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13778,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13777,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "19821:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "19821:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13779,
                    "nodeType": "ArrayTypeName",
                    "src": "19821:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13784,
                  "mutability": "mutable",
                  "name": "routesB",
                  "nameLocation": "19872:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13795,
                  "src": "19855:24:59",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$13282_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IVelodrome.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13782,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 13781,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13282,
                        "src": "19855:5:59"
                      },
                      "referencedDeclaration": 13282,
                      "src": "19855:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$13282_storage_ptr",
                        "typeString": "struct IVelodrome.Route"
                      }
                    },
                    "id": 13783,
                    "nodeType": "ArrayTypeName",
                    "src": "19855:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$13282_storage_$dyn_storage_ptr",
                      "typeString": "struct IVelodrome.Route[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19689:196:59"
            },
            "returnParameters": {
              "id": 13794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13787,
                  "mutability": "mutable",
                  "name": "amountOutMinA",
                  "nameLocation": "19954:13:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13795,
                  "src": "19946:21:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19946:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13789,
                  "mutability": "mutable",
                  "name": "amountOutMinB",
                  "nameLocation": "19989:13:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13795,
                  "src": "19981:21:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19981:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13791,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "20024:10:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13795,
                  "src": "20016:18:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20016:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13793,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "20056:10:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13795,
                  "src": "20048:18:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20048:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19932:144:59"
            },
            "scope": 13808,
            "src": "19660:417:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 13796,
              "nodeType": "StructuredDocumentation",
              "src": "20083:594:59",
              "text": "@notice Used by zapper to determine appropriate ratio of A to B to deposit liquidity. Assumes stable pool.\n @dev Returns stable liquidity ratio of B to (A + B).\n      E.g. if ratio is 0.4, it means there is more of A than there is of B.\n      Therefore you should deposit more of token A than B.\n @param tokenA   tokenA of stable pool you are zapping into.\n @param tokenB   tokenB of stable pool you are zapping into.\n @param factory  Factory that created stable pool.\n @return ratio   Ratio of token0 to token1 required to deposit into zap."
            },
            "functionSelector": "f5ba53c7",
            "id": 13807,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteStableLiquidityRatio",
            "nameLocation": "20691:25:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13798,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "20734:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13807,
                  "src": "20726:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20726:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13800,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "20758:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13807,
                  "src": "20750:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20750:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13802,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "20782:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13807,
                  "src": "20774:15:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20774:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20716:79:59"
            },
            "returnParameters": {
              "id": 13806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13805,
                  "mutability": "mutable",
                  "name": "ratio",
                  "nameLocation": "20827:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 13807,
                  "src": "20819:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20819:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20818:15:59"
            },
            "scope": 13808,
            "src": "20682:152:59",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 13809,
        "src": "57:20779:59",
        "usedErrors": [
          13284,
          13286,
          13288,
          13290,
          13292,
          13294,
          13296,
          13298,
          13300,
          13302,
          13304,
          13306,
          13308,
          13310,
          13312,
          13314,
          13316,
          13318,
          13320,
          13322,
          13324
        ]
      }
    ],
    "src": "32:20805:59"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "IVelodrome",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "UNSAFE_swapExactTokensForTokens(uint256[],(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap one token for another without slippage protection",
        "params": {
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        },
        "returns": {
          "_0": "amounts     Array of amounts to swap  per route"
        }
      },
      "addLiquidity(address,address,bool,uint256,uint256,uint256,uint256,address,uint256)": {
        "notice": "Add liquidity of two tokens to a Pool",
        "params": {
          "amountADesired": "Amount of tokenA desired to deposit",
          "amountAMin": "Minimum amount of tokenA to deposit",
          "amountBDesired": "Amount of tokenB desired to deposit",
          "amountBMin": "Minimum amount of tokenB to deposit",
          "deadline": "Deadline to receive liquidity",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of liquidity token",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountA": "        Amount of tokenA to actually deposit",
          "amountB": "        Amount of tokenB to actually deposit",
          "liquidity": "      Amount of liquidity token returned from deposit"
        }
      },
      "addLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)": {
        "notice": "Add liquidity of a token and WETH (transferred as ETH) to a Pool",
        "params": {
          "amountETHMin": "Minimum amount of ETH to deposit",
          "amountTokenDesired": "Amount of token desired to deposit",
          "amountTokenMin": "Minimum amount of token to deposit",
          "deadline": "Deadline to add liquidity",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of liquidity token",
          "token": "."
        },
        "returns": {
          "amountETH": "          Amount of tokenETH to actually deposit",
          "amountToken": "        Amount of token to actually deposit",
          "liquidity": "          Amount of liquidity token returned from deposit"
        }
      },
      "generateZapInParams(address,address,bool,address,uint256,uint256,(address,address,bool,address)[],(address,address,bool,address)[])": {
        "details": "Output token refers to the token you want to zap in from.",
        "notice": "Used to generate params required for zapping in.         Zap in => remove liquidity then swap.         Apply slippage to expected swap values to account for changes in reserves in between.",
        "params": {
          "_factory": ".",
          "amountInA": "Amount of input token you wish to send down routesA",
          "amountInB": "Amount of input token you wish to send down routesB",
          "routesA": "Route used to convert input token to tokenA",
          "routesB": "Route used to convert input token to tokenB",
          "stable": ".",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountAMin": "     Minimum amount of tokenA expected from depositing liquidity.",
          "amountBMin": "     Minimum amount of tokenB expected from depositing liquidity.",
          "amountOutMinA": "  Minimum output expected from swapping input token to tokenA.",
          "amountOutMinB": "  Minimum output expected from swapping input token to tokenB."
        }
      },
      "generateZapOutParams(address,address,bool,address,uint256,(address,address,bool,address)[],(address,address,bool,address)[])": {
        "details": "Output token refers to the token you want to zap out of.",
        "notice": "Used to generate params required for zapping out.         Zap out => swap then add liquidity.         Apply slippage to expected liquidity values to account for changes in reserves in between.",
        "params": {
          "_factory": ".",
          "liquidity": "Amount of liquidity being zapped out of into a given output token.",
          "routesA": "Route used to convert tokenA into output token.",
          "routesB": "Route used to convert tokenB into output token.",
          "stable": ".",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountAMin": "     Minimum amount of tokenA expected from withdrawing liquidity.",
          "amountBMin": "     Minimum amount of tokenB expected from withdrawing liquidity.",
          "amountOutMinA": "  Minimum output expected from swapping tokenA into output token.",
          "amountOutMinB": "  Minimum output expected from swapping tokenB into output token."
        }
      },
      "getAmountsOut(uint256,(address,address,bool,address)[])": {
        "notice": "Perform chained getAmountOut calculations on any number of pools"
      },
      "getReserves(address,address,bool,address)": {
        "notice": "Fetch and sort the reserves for a pool",
        "params": {
          "_factory": "Address of PoolFactory for tokenA and tokenB",
          "stable": "True if pool is stable, false if volatile",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "reserveA": "   Amount of reserves of the sorted token A",
          "reserveB": "   Amount of reserves of the sorted token B"
        }
      },
      "pairFor(address,address,bool,address)": {
        "notice": "Wraps around poolFor(tokenA,tokenB,stable,_factory) for backwards compatibility to Velodrome v1"
      },
      "poolFor(address,address,bool,address)": {
        "details": "Returns a randomly generated address for a nonexistent pool",
        "notice": "Calculate the address of a pool by its' factory.         Used by all Router functions containing a `Route[]` or `_factory` argument.         Reverts if _factory is not approved by the FactoryRegistry",
        "params": {
          "_factory": "Address of factory which created the pool",
          "stable": "True if pool is stable, false if volatile",
          "tokenA": "Address of token to query",
          "tokenB": "Address of token to query"
        }
      },
      "quoteAddLiquidity(address,address,bool,address,uint256,uint256)": {
        "notice": "Quote the amount deposited into a Pool",
        "params": {
          "_factory": "Address of PoolFactory for tokenA and tokenB",
          "amountADesired": "Amount of tokenA desired to deposit",
          "amountBDesired": "Amount of tokenB desired to deposit",
          "stable": "True if pool is stable, false if volatile",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountA": "        Amount of tokenA to actually deposit",
          "amountB": "        Amount of tokenB to actually deposit",
          "liquidity": "      Amount of liquidity token returned from deposit"
        }
      },
      "quoteRemoveLiquidity(address,address,bool,address,uint256)": {
        "notice": "Quote the amount of liquidity removed from a Pool",
        "params": {
          "_factory": "Address of PoolFactory for tokenA and tokenB",
          "liquidity": "Amount of liquidity to remove",
          "stable": "True if pool is stable, false if volatile",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountA": "    Amount of tokenA received",
          "amountB": "    Amount of tokenB received"
        }
      },
      "quoteStableLiquidityRatio(address,address,address)": {
        "details": "Returns stable liquidity ratio of B to (A + B).      E.g. if ratio is 0.4, it means there is more of A than there is of B.      Therefore you should deposit more of token A than B.",
        "notice": "Used by zapper to determine appropriate ratio of A to B to deposit liquidity. Assumes stable pool.",
        "params": {
          "factory": "Factory that created stable pool.",
          "tokenA": "tokenA of stable pool you are zapping into.",
          "tokenB": "tokenB of stable pool you are zapping into."
        },
        "returns": {
          "ratio": "  Ratio of token0 to token1 required to deposit into zap."
        }
      },
      "removeLiquidity(address,address,bool,uint256,uint256,uint256,address,uint256)": {
        "notice": "Remove liquidity of two tokens from a Pool",
        "params": {
          "amountAMin": "Minimum amount of tokenA to receive",
          "amountBMin": "Minimum amount of tokenB to receive",
          "deadline": "Deadline to remove liquidity",
          "liquidity": "Amount of liquidity to remove",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of tokens received",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountA": "    Amount of tokenA received",
          "amountB": "    Amount of tokenB received"
        }
      },
      "removeLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)": {
        "notice": "Remove liquidity of a token and WETH (returned as ETH) from a Pool",
        "params": {
          "amountETHMin": "Minimum amount of ETH to receive",
          "amountTokenMin": "Minimum amount of token to receive",
          "deadline": "Deadline to receive liquidity",
          "liquidity": "Amount of liquidity to remove",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of liquidity token",
          "token": "."
        },
        "returns": {
          "amountETH": "      Amount of ETH received",
          "amountToken": "    Amount of token received"
        }
      },
      "removeLiquidityETHSupportingFeeOnTransferTokens(address,bool,uint256,uint256,uint256,address,uint256)": {
        "notice": "Remove liquidity of a fee-on-transfer token and WETH (returned as ETH) from a Pool",
        "params": {
          "amountETHMin": "Minimum amount of ETH to receive",
          "amountTokenMin": "Minimum amount of token to receive",
          "deadline": "Deadline to receive liquidity",
          "liquidity": "Amount of liquidity to remove",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of liquidity token",
          "token": "."
        },
        "returns": {
          "amountETH": "      Amount of ETH received"
        }
      },
      "sortTokens(address,address)": {
        "notice": "Sort two tokens by which address value is less than the other",
        "params": {
          "tokenA": "Address of token to sort",
          "tokenB": "Address of token to sort"
        },
        "returns": {
          "token0": " Lower address value between tokenA and tokenB",
          "token1": " Higher address value between tokenA and tokenB"
        }
      },
      "swapExactETHForTokens(uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap ETH for a token",
        "params": {
          "amountOutMin": "Minimum amount of desired token received",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        },
        "returns": {
          "amounts": "    Array of amounts returned per route"
        }
      },
      "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap ETH for a token supporting fee-on-transfer tokens",
        "params": {
          "amountOutMin": "Minimum amount of desired token received",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        }
      },
      "swapExactTokensForETH(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap a token for WETH (returned as ETH)",
        "params": {
          "amountIn": "Amount of token in",
          "amountOutMin": "Minimum amount of desired ETH",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        },
        "returns": {
          "amounts": "    Array of amounts returned per route"
        }
      },
      "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap a token for WETH (returned as ETH) supporting fee-on-transfer tokens",
        "params": {
          "amountIn": "Amount of token in",
          "amountOutMin": "Minimum amount of desired ETH",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        }
      },
      "swapExactTokensForTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap one token for another",
        "params": {
          "amountIn": "Amount of token in",
          "amountOutMin": "Minimum amount of desired token received",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        },
        "returns": {
          "amounts": "    Array of amounts returned per route"
        }
      },
      "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap one token for another supporting fee-on-transfer tokens",
        "params": {
          "amountIn": "Amount of token in",
          "amountOutMin": "Minimum amount of desired token received",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        }
      },
      "zapIn(address,uint256,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[],address,bool)": {
        "notice": "Zap a token A into a pool (B, C). (A can be equal to B or C).         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).         Slippage is required for the initial swap.         Additional slippage may be required when adding liquidity as the         price of the token may have changed.",
        "params": {
          "amountInA": "Amount of input token you wish to send down routesA",
          "amountInB": "Amount of input token you wish to send down routesB",
          "routesA": "Route used to convert input token to tokenA",
          "routesB": "Route used to convert input token to tokenB",
          "stake": "Auto-stake liquidity in corresponding gauge.",
          "to": "Address you wish to mint liquidity to.",
          "tokenIn": "Token you are zapping in from (i.e. input token).",
          "zapInPool": "Contains zap struct information. See Zap struct."
        },
        "returns": {
          "liquidity": "  Amount of LP tokens created from zapping in."
        }
      },
      "zapOut(address,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[])": {
        "notice": "Zap out a pool (B, C) into A.         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).         Slippage is required for the removal of liquidity.         Additional slippage may be required on the swap as the         price of the token may have changed.",
        "params": {
          "liquidity": "Amount of liquidity you wish to remove.",
          "routesA": "Route used to convert tokenA into output token.",
          "routesB": "Route used to convert tokenB into output token.",
          "tokenOut": "Token you are zapping out to (i.e. output token).",
          "zapOutPool": "Contains zap struct information. See Zap struct."
        }
      }
    },
    "version": 1
  },
  "offset": [
    57,
    20836
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "d69babc460be1abe629dfd0689a85f33b35fac29",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IVelodrome {\n    struct Route {\n        address from;\n        address to;\n        bool stable;\n        address factory;\n    }\n\n    error ConversionFromV2ToV1VeloProhibited();\n    error ETHTransferFailed();\n    error Expired();\n    error InsufficientAmount();\n    error InsufficientAmountA();\n    error InsufficientAmountB();\n    error InsufficientAmountADesired();\n    error InsufficientAmountBDesired();\n    error InsufficientAmountAOptimal();\n    error InsufficientLiquidity();\n    error InsufficientOutputAmount();\n    error InvalidAmountInForETHDeposit();\n    error InvalidTokenInForETHDeposit();\n    error InvalidPath();\n    error InvalidRouteA();\n    error InvalidRouteB();\n    error OnlyWETH();\n    error PoolDoesNotExist();\n    error PoolFactoryDoesNotExist();\n    error SameAddresses();\n    error ZeroAddress();\n\n    /// @dev Struct containing information necessary to zap in and out of pools\n    /// @param tokenA           .\n    /// @param tokenB           .\n    /// @param stable           Stable or volatile pool\n    /// @param factory          factory of pool\n    /// @param amountOutMinA    Minimum amount expected from swap leg of zap via routesA\n    /// @param amountOutMinB    Minimum amount expected from swap leg of zap via routesB\n    /// @param amountAMin       Minimum amount of tokenA expected from liquidity leg of zap\n    /// @param amountBMin       Minimum amount of tokenB expected from liquidity leg of zap\n    struct Zap {\n        address tokenA;\n        address tokenB;\n        bool stable;\n        address factory;\n        uint256 amountOutMinA;\n        uint256 amountOutMinB;\n        uint256 amountAMin;\n        uint256 amountBMin;\n    }\n\n    /// @notice Sort two tokens by which address value is less than the other\n    /// @param tokenA   Address of token to sort\n    /// @param tokenB   Address of token to sort\n    /// @return token0  Lower address value between tokenA and tokenB\n    /// @return token1  Higher address value between tokenA and tokenB\n    function sortTokens(address tokenA, address tokenB)\n        external\n        pure\n        returns (address token0, address token1);\n\n    /// @notice Calculate the address of a pool by its' factory.\n    ///         Used by all Router functions containing a `Route[]` or `_factory` argument.\n    ///         Reverts if _factory is not approved by the FactoryRegistry\n    /// @dev Returns a randomly generated address for a nonexistent pool\n    /// @param tokenA   Address of token to query\n    /// @param tokenB   Address of token to query\n    /// @param stable   True if pool is stable, false if volatile\n    /// @param _factory Address of factory which created the pool\n    function poolFor(\n        address tokenA,\n        address tokenB,\n        bool stable,\n        address _factory\n    ) external view returns (address pool);\n\n    /// @notice Wraps around poolFor(tokenA,tokenB,stable,_factory) for backwards compatibility to Velodrome v1\n    function pairFor(\n        address tokenA,\n        address tokenB,\n        bool stable,\n        address _factory\n    ) external view returns (address pool);\n\n    /// @notice Fetch and sort the reserves for a pool\n    /// @param tokenA       .\n    /// @param tokenB       .\n    /// @param stable       True if pool is stable, false if volatile\n    /// @param _factory     Address of PoolFactory for tokenA and tokenB\n    /// @return reserveA    Amount of reserves of the sorted token A\n    /// @return reserveB    Amount of reserves of the sorted token B\n    function getReserves(\n        address tokenA,\n        address tokenB,\n        bool stable,\n        address _factory\n    ) external view returns (uint256 reserveA, uint256 reserveB);\n\n    /// @notice Perform chained getAmountOut calculations on any number of pools\n    function getAmountsOut(uint256 amountIn, Route[] memory routes)\n        external\n        view\n        returns (uint256[] memory amounts);\n\n    // **** ADD LIQUIDITY ****\n\n    /// @notice Quote the amount deposited into a Pool\n    /// @param tokenA           .\n    /// @param tokenB           .\n    /// @param stable           True if pool is stable, false if volatile\n    /// @param _factory         Address of PoolFactory for tokenA and tokenB\n    /// @param amountADesired   Amount of tokenA desired to deposit\n    /// @param amountBDesired   Amount of tokenB desired to deposit\n    /// @return amountA         Amount of tokenA to actually deposit\n    /// @return amountB         Amount of tokenB to actually deposit\n    /// @return liquidity       Amount of liquidity token returned from deposit\n    function quoteAddLiquidity(\n        address tokenA,\n        address tokenB,\n        bool stable,\n        address _factory,\n        uint256 amountADesired,\n        uint256 amountBDesired\n    )\n        external\n        view\n        returns (\n            uint256 amountA,\n            uint256 amountB,\n            uint256 liquidity\n        );\n\n    /// @notice Quote the amount of liquidity removed from a Pool\n    /// @param tokenA       .\n    /// @param tokenB       .\n    /// @param stable       True if pool is stable, false if volatile\n    /// @param _factory     Address of PoolFactory for tokenA and tokenB\n    /// @param liquidity    Amount of liquidity to remove\n    /// @return amountA     Amount of tokenA received\n    /// @return amountB     Amount of tokenB received\n    function quoteRemoveLiquidity(\n        address tokenA,\n        address tokenB,\n        bool stable,\n        address _factory,\n        uint256 liquidity\n    ) external view returns (uint256 amountA, uint256 amountB);\n\n    /// @notice Add liquidity of two tokens to a Pool\n    /// @param tokenA           .\n    /// @param tokenB           .\n    /// @param stable           True if pool is stable, false if volatile\n    /// @param amountADesired   Amount of tokenA desired to deposit\n    /// @param amountBDesired   Amount of tokenB desired to deposit\n    /// @param amountAMin       Minimum amount of tokenA to deposit\n    /// @param amountBMin       Minimum amount of tokenB to deposit\n    /// @param to               Recipient of liquidity token\n    /// @param deadline         Deadline to receive liquidity\n    /// @return amountA         Amount of tokenA to actually deposit\n    /// @return amountB         Amount of tokenB to actually deposit\n    /// @return liquidity       Amount of liquidity token returned from deposit\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        bool stable,\n        uint256 amountADesired,\n        uint256 amountBDesired,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    )\n        external\n        returns (\n            uint256 amountA,\n            uint256 amountB,\n            uint256 liquidity\n        );\n\n    /// @notice Add liquidity of a token and WETH (transferred as ETH) to a Pool\n    /// @param token                .\n    /// @param stable               True if pool is stable, false if volatile\n    /// @param amountTokenDesired   Amount of token desired to deposit\n    /// @param amountTokenMin       Minimum amount of token to deposit\n    /// @param amountETHMin         Minimum amount of ETH to deposit\n    /// @param to                   Recipient of liquidity token\n    /// @param deadline             Deadline to add liquidity\n    /// @return amountToken         Amount of token to actually deposit\n    /// @return amountETH           Amount of tokenETH to actually deposit\n    /// @return liquidity           Amount of liquidity token returned from deposit\n    function addLiquidityETH(\n        address token,\n        bool stable,\n        uint256 amountTokenDesired,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline\n    )\n        external\n        payable\n        returns (\n            uint256 amountToken,\n            uint256 amountETH,\n            uint256 liquidity\n        );\n\n    // **** REMOVE LIQUIDITY ****\n\n    /// @notice Remove liquidity of two tokens from a Pool\n    /// @param tokenA       .\n    /// @param tokenB       .\n    /// @param stable       True if pool is stable, false if volatile\n    /// @param liquidity    Amount of liquidity to remove\n    /// @param amountAMin   Minimum amount of tokenA to receive\n    /// @param amountBMin   Minimum amount of tokenB to receive\n    /// @param to           Recipient of tokens received\n    /// @param deadline     Deadline to remove liquidity\n    /// @return amountA     Amount of tokenA received\n    /// @return amountB     Amount of tokenB received\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        bool stable,\n        uint256 liquidity,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    ) external returns (uint256 amountA, uint256 amountB);\n\n    /// @notice Remove liquidity of a token and WETH (returned as ETH) from a Pool\n    /// @param token            .\n    /// @param stable           True if pool is stable, false if volatile\n    /// @param liquidity        Amount of liquidity to remove\n    /// @param amountTokenMin   Minimum amount of token to receive\n    /// @param amountETHMin     Minimum amount of ETH to receive\n    /// @param to               Recipient of liquidity token\n    /// @param deadline         Deadline to receive liquidity\n    /// @return amountToken     Amount of token received\n    /// @return amountETH       Amount of ETH received\n    function removeLiquidityETH(\n        address token,\n        bool stable,\n        uint256 liquidity,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline\n    ) external returns (uint256 amountToken, uint256 amountETH);\n\n    /// @notice Remove liquidity of a fee-on-transfer token and WETH (returned as ETH) from a Pool\n    /// @param token            .\n    /// @param stable           True if pool is stable, false if volatile\n    /// @param liquidity        Amount of liquidity to remove\n    /// @param amountTokenMin   Minimum amount of token to receive\n    /// @param amountETHMin     Minimum amount of ETH to receive\n    /// @param to               Recipient of liquidity token\n    /// @param deadline         Deadline to receive liquidity\n    /// @return amountETH       Amount of ETH received\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        bool stable,\n        uint256 liquidity,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline\n    ) external returns (uint256 amountETH);\n\n    // **** SWAP ****\n\n    /// @notice Swap one token for another\n    /// @param amountIn     Amount of token in\n    /// @param amountOutMin Minimum amount of desired token received\n    /// @param routes       Array of trade routes used in the swap\n    /// @param to           Recipient of the tokens received\n    /// @param deadline     Deadline to receive tokens\n    /// @return amounts     Array of amounts returned per route\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        Route[] calldata routes,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    /// @notice Swap ETH for a token\n    /// @param amountOutMin Minimum amount of desired token received\n    /// @param routes       Array of trade routes used in the swap\n    /// @param to           Recipient of the tokens received\n    /// @param deadline     Deadline to receive tokens\n    /// @return amounts     Array of amounts returned per route\n    function swapExactETHForTokens(\n        uint256 amountOutMin,\n        Route[] calldata routes,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256[] memory amounts);\n\n    /// @notice Swap a token for WETH (returned as ETH)\n    /// @param amountIn     Amount of token in\n    /// @param amountOutMin Minimum amount of desired ETH\n    /// @param routes       Array of trade routes used in the swap\n    /// @param to           Recipient of the tokens received\n    /// @param deadline     Deadline to receive tokens\n    /// @return amounts     Array of amounts returned per route\n    function swapExactTokensForETH(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        Route[] calldata routes,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    /// @notice Swap one token for another without slippage protection\n    /// @return amounts     Array of amounts to swap  per route\n    /// @param routes       Array of trade routes used in the swap\n    /// @param to           Recipient of the tokens received\n    /// @param deadline     Deadline to receive tokens\n    function UNSAFE_swapExactTokensForTokens(\n        uint256[] memory amounts,\n        Route[] calldata routes,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory);\n\n    // **** SWAP (supporting fee-on-transfer tokens) ****\n\n    /// @notice Swap one token for another supporting fee-on-transfer tokens\n    /// @param amountIn     Amount of token in\n    /// @param amountOutMin Minimum amount of desired token received\n    /// @param routes       Array of trade routes used in the swap\n    /// @param to           Recipient of the tokens received\n    /// @param deadline     Deadline to receive tokens\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        Route[] calldata routes,\n        address to,\n        uint256 deadline\n    ) external;\n\n    /// @notice Swap ETH for a token supporting fee-on-transfer tokens\n    /// @param amountOutMin Minimum amount of desired token received\n    /// @param routes       Array of trade routes used in the swap\n    /// @param to           Recipient of the tokens received\n    /// @param deadline     Deadline to receive tokens\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint256 amountOutMin,\n        Route[] calldata routes,\n        address to,\n        uint256 deadline\n    ) external payable;\n\n    /// @notice Swap a token for WETH (returned as ETH) supporting fee-on-transfer tokens\n    /// @param amountIn     Amount of token in\n    /// @param amountOutMin Minimum amount of desired ETH\n    /// @param routes       Array of trade routes used in the swap\n    /// @param to           Recipient of the tokens received\n    /// @param deadline     Deadline to receive tokens\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        Route[] calldata routes,\n        address to,\n        uint256 deadline\n    ) external;\n\n    /// @notice Zap a token A into a pool (B, C). (A can be equal to B or C).\n    ///         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).\n    ///         Slippage is required for the initial swap.\n    ///         Additional slippage may be required when adding liquidity as the\n    ///         price of the token may have changed.\n    /// @param tokenIn      Token you are zapping in from (i.e. input token).\n    /// @param amountInA    Amount of input token you wish to send down routesA\n    /// @param amountInB    Amount of input token you wish to send down routesB\n    /// @param zapInPool    Contains zap struct information. See Zap struct.\n    /// @param routesA      Route used to convert input token to tokenA\n    /// @param routesB      Route used to convert input token to tokenB\n    /// @param to           Address you wish to mint liquidity to.\n    /// @param stake        Auto-stake liquidity in corresponding gauge.\n    /// @return liquidity   Amount of LP tokens created from zapping in.\n    function zapIn(\n        address tokenIn,\n        uint256 amountInA,\n        uint256 amountInB,\n        Zap calldata zapInPool,\n        Route[] calldata routesA,\n        Route[] calldata routesB,\n        address to,\n        bool stake\n    ) external payable returns (uint256 liquidity);\n\n    /// @notice Zap out a pool (B, C) into A.\n    ///         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).\n    ///         Slippage is required for the removal of liquidity.\n    ///         Additional slippage may be required on the swap as the\n    ///         price of the token may have changed.\n    /// @param tokenOut     Token you are zapping out to (i.e. output token).\n    /// @param liquidity    Amount of liquidity you wish to remove.\n    /// @param zapOutPool   Contains zap struct information. See Zap struct.\n    /// @param routesA      Route used to convert tokenA into output token.\n    /// @param routesB      Route used to convert tokenB into output token.\n    function zapOut(\n        address tokenOut,\n        uint256 liquidity,\n        Zap calldata zapOutPool,\n        Route[] calldata routesA,\n        Route[] calldata routesB\n    ) external;\n\n    /// @notice Used to generate params required for zapping in.\n    ///         Zap in => remove liquidity then swap.\n    ///         Apply slippage to expected swap values to account for changes in reserves in between.\n    /// @dev Output token refers to the token you want to zap in from.\n    /// @param tokenA           .\n    /// @param tokenB           .\n    /// @param stable           .\n    /// @param _factory         .\n    /// @param amountInA        Amount of input token you wish to send down routesA\n    /// @param amountInB        Amount of input token you wish to send down routesB\n    /// @param routesA          Route used to convert input token to tokenA\n    /// @param routesB          Route used to convert input token to tokenB\n    /// @return amountOutMinA   Minimum output expected from swapping input token to tokenA.\n    /// @return amountOutMinB   Minimum output expected from swapping input token to tokenB.\n    /// @return amountAMin      Minimum amount of tokenA expected from depositing liquidity.\n    /// @return amountBMin      Minimum amount of tokenB expected from depositing liquidity.\n    function generateZapInParams(\n        address tokenA,\n        address tokenB,\n        bool stable,\n        address _factory,\n        uint256 amountInA,\n        uint256 amountInB,\n        Route[] calldata routesA,\n        Route[] calldata routesB\n    )\n        external\n        view\n        returns (\n            uint256 amountOutMinA,\n            uint256 amountOutMinB,\n            uint256 amountAMin,\n            uint256 amountBMin\n        );\n\n    /// @notice Used to generate params required for zapping out.\n    ///         Zap out => swap then add liquidity.\n    ///         Apply slippage to expected liquidity values to account for changes in reserves in between.\n    /// @dev Output token refers to the token you want to zap out of.\n    /// @param tokenA           .\n    /// @param tokenB           .\n    /// @param stable           .\n    /// @param _factory         .\n    /// @param liquidity        Amount of liquidity being zapped out of into a given output token.\n    /// @param routesA          Route used to convert tokenA into output token.\n    /// @param routesB          Route used to convert tokenB into output token.\n    /// @return amountOutMinA   Minimum output expected from swapping tokenA into output token.\n    /// @return amountOutMinB   Minimum output expected from swapping tokenB into output token.\n    /// @return amountAMin      Minimum amount of tokenA expected from withdrawing liquidity.\n    /// @return amountBMin      Minimum amount of tokenB expected from withdrawing liquidity.\n    function generateZapOutParams(\n        address tokenA,\n        address tokenB,\n        bool stable,\n        address _factory,\n        uint256 liquidity,\n        Route[] calldata routesA,\n        Route[] calldata routesB\n    )\n        external\n        view\n        returns (\n            uint256 amountOutMinA,\n            uint256 amountOutMinB,\n            uint256 amountAMin,\n            uint256 amountBMin\n        );\n\n    /// @notice Used by zapper to determine appropriate ratio of A to B to deposit liquidity. Assumes stable pool.\n    /// @dev Returns stable liquidity ratio of B to (A + B).\n    ///      E.g. if ratio is 0.4, it means there is more of A than there is of B.\n    ///      Therefore you should deposit more of token A than B.\n    /// @param tokenA   tokenA of stable pool you are zapping into.\n    /// @param tokenB   tokenB of stable pool you are zapping into.\n    /// @param factory  Factory that created stable pool.\n    /// @return ratio   Ratio of token0 to token1 required to deposit into zap.\n    function quoteStableLiquidityRatio(\n        address tokenA,\n        address tokenB,\n        address factory\n    ) external view returns (uint256 ratio);\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/Interfaces/IVelodrome.sol",
  "type": "interface"
}